namespace neio.stdlib;

import neio.lang.Content;
import neio.lang.Text;

class Chapter extends TextContainer;

protected Text title;
protected Integer level;

Chapter(Text title, Integer level) {
    this.title = title;
    this.level = level;
}

nested Chapter #(Text title, Integer level) {
	if (level <= this.level) {
        Chapter c = nearestAncestor(Chapter.class);
        if (c != null) {
            return c.hash(title, level);
        } else {
            return nearestAncestor(Document.class).hash(title);
        }
	}
    Chapter chapter = new Chapter(title, level);
    addContent(chapter);
	
    return chapter;
}

Text title() {
    return title;
}

String toTex() {
	return toTex(level) + super.toTex();
}

String toTex(Integer lvl) {
    return "\\" + subs(lvl) + "section*{" + title.toTex() + "}";
}

String subs(Integer lvl) {
	String subs = "";
	for (int i = 1; i < lvl; i = i + 1) {
		subs = subs + "sub";
	}
	
	return subs;
}
