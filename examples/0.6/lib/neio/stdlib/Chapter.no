namespace neio.stdlib;

import neio.lang.Content;

class Chapter extends Content;

String title;
Integer level;

Chapter(String title, Integer level) {
    this.title = title;
    this.level = level;
}

nested Chapter #(String title, Integer level) {
    Chapter chapter = factory.createChapter(title, level);
    content.add(chapter);
	
    return chapter;
}

Itemize *(String text) {
	Itemize itemize = factory.createItemize();
	ItemizeItem item = factory.createItemizeItem(text, itemize, 1);
	itemize.*(item);
    content.add(itemize);

    return itemize;
}

Enumerate -(String text) {
	Enumerate enumerate = factory.createEnumerate();
	EnumerateItem item = factory.createEnumerateItem(text, enumerate, 1);
	enumerate.-(item);
    content.add(enumerate);

    return enumerate;
}

Paragraph newline(String parText) {
    Paragraph p = factory.createParagraph(parText);
    content.add(p);
	
    return p;
}

Image image(String caption, String imageName) {
	Image neioImage = factory.createImage(caption, imageName);
	content.add(neioImage);
	
	return neioImage;
}

String toTex() {
	return "\\" + getSubs() + "section*{" + title + "}" + super.toTex();
}

String getSubs() {
	String subs = "";
	for (int i = 1; i < level; i = i + 1) {
		subs = subs + "sub";
	}
	
	return subs;
}
