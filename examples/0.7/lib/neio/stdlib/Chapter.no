namespace neio.stdlib;

import neio.lang.Content;

class Chapter extends Content;

String title;
Integer level;

Chapter(String title, Integer level) {
    this.title = title;
    this.level = level;
}

nested Chapter #(String title, Integer level) {
	if (level <= this.level) {
		return nearestAncestor(Chapter.class).#(title, level);
	}
    Chapter chapter = new Chapter(title, level);
    addContent(chapter);
	
    return chapter;
}

Itemize *(String text) {
	Itemize itemize = new Itemize();
	ItemizeItem item = new ItemizeItem(text, itemize, 1);
	itemize.*(item);
    addContent(itemize);

    return itemize;
}

Enumerate -(String text) {
	Enumerate enumerate = new Enumerate();
	EnumerateItem item = new EnumerateItem(text, enumerate, 1);
	enumerate.-(item);
    addContent(enumerate);

    return enumerate;
}

Paragraph newline(String parText) {
    Paragraph p = new Paragraph(parText);
    addContent(p);
	
    return p;
}

Image image(String imageName) {
    return image("", imageName);
}

Image image(String caption, String imageName) {
	Image neioImage = new Image(caption, imageName);
	addContent(neioImage);
	
	return neioImage;
}

String toTex() {
	return "\\" + getSubs() + "section*{" + title + "}" + super.toTex();
}

String title() {
    return title;
}

String subs() {
	String subs = "";
	for (int i = 1; i < level; i = i + 1) {
		subs = subs + "sub";
	}
	
	return subs;
}
