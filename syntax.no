[Document]

# Documenttype
Every document starts with a pair of squared brackets that contain one word.
This word describes the type of document that will be used.
Examples are: `Document`, `Slideshow`,...

# Chapter
Chapters are denoted by the `#` sign. They can be nested to create subchapters.

# Paragraphs
Paragraphs are just a bunch of sentences (ending in `\r?\n`). They are seperated by
an empty newline or follow on a chapter.
To add a newline to a paragraph use `\\`.

# Text markup
You can make some text bold by placing it between a `*` pair.
You can set text as itaclic by placing it between a `__` pair.
You can add a subscript using `_` e.g. `a_1`
You can add a superscript using  `^`.

# Images
Images can be written by using `[caption](image)`. The caption is optional, the square
brackets however are mandatory.

# Links
Links can be written as follows `![link_name](url)`. `link_name` can be left empty
to use the url as link name.

# Labels
Elements (Anything but code/documenttype and comments) can be labeled. These labels
can be used to refer to the labeled element further on in the text or in code.
Labels can be created as follows: `{label}(code)`, you also drop the brackets, doing so
will label the next defined element.
Labels can be refered to in text through `[label]`.

# Highlighted text
To highlight some text or paste some code you can use a pair of single backquotes.

# Unordered lists (itemizations)
An unordered list consists of a bunch of unordered listitems.
To create an unordered listitem, use the `*` operator, to go to the next level just
add another `*`.

# Ordered lists
Ordered lists also consists of a bunch of listitems, but ordered ones this time around.
To create an ordered listitem, use the `+` operator, to go to the next level just add
another `+`.

# Comments
Single-line comments are written using `//`.
Multi-line comments are written using `/* */`.

# Code
Code that will be executed at compile time can be written using triple backquote (` ``` `).

